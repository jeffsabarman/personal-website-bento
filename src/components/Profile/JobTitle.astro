---

---

<!-- <div class="typewriter"> --><!-- <p class="text-orange font-semibold text-2xl">Front End Engineer</p> --><!-- </div> -->
<a
  href="/"
  class="typewrite cursor-auto"
  data-period="2000"
  data-type='[ "Front End Engineer ", "Aspiring AI/ML Engineer ", "Industrial Engineer Graduate" ]'
>
  <span class="wrap"></span>
</a>
<style>
  .typewriter p {
    overflow: hidden; /* Ensures the content is not revealed until the animation */
    border-right: 0.15em solid #ff7f3e; /* The typwriter cursor */
    white-space: nowrap; /* Keeps the content on a single line */
    animation:
      typing 2s steps(20, end) infinite,
      blink-caret 0.5s step-end infinite;
  }
  /* The typing effect */
  @keyframes typing {
    from {
      width: 0;
    }
    to {
      width: 50%;
    }
  }

  /* The typewriter cursor effect */
  @keyframes blink-caret {
    from,
    to {
      border-color: transparent;
    }
    50% {
      border-color: #ff7f3e;
    }
  }
</style>
<script>
  var TxtType = function (el: any, toRotate: any, period: any) {
    //@ts-ignore
    this.toRotate = toRotate;
    //@ts-ignore
    this.el = el;
    //@ts-ignore
    this.loopNum = 0;
    //@ts-ignore
    this.period = parseInt(period, 10) || 2000;
    //@ts-ignore
    this.txt = "";
    //@ts-ignore
    this.tick();
    //@ts-ignore
    this.isDeleting = false;
  };

  TxtType.prototype.tick = function () {
    var i = this.loopNum % this.toRotate.length;
    var fullTxt = this.toRotate[i];

    if (this.isDeleting) {
      this.txt = fullTxt.substring(0, this.txt.length - 1);
    } else {
      this.txt = fullTxt.substring(0, this.txt.length + 1);
    }

    this.el.innerHTML =
      '<span class="wrap text-orange font-light text-xl text-primary">' +
      this.txt +
      "</span>";

    var that = this;
    var delta = 200 - Math.random() * 100;

    if (this.isDeleting) {
      delta /= 2;
    }

    if (!this.isDeleting && this.txt === fullTxt) {
      delta = this.period;
      this.isDeleting = true;
    } else if (this.isDeleting && this.txt === "") {
      this.isDeleting = false;
      this.loopNum++;
      delta = 500;
    }

    setTimeout(function () {
      that.tick();
    }, delta);
  };

  window.onload = function () {
    var elements = document.getElementsByClassName("typewrite");
    for (var i = 0; i < elements.length; i++) {
      var toRotate = elements[i].getAttribute("data-type");
      var period = elements[i].getAttribute("data-period");
      if (toRotate) {
        //@ts-ignore
        new TxtType(elements[i], JSON.parse(toRotate), period);
      }
    }
    // INJECT CSS
    var css = document.createElement("style");
    // css.type = "text/css";
    css.innerHTML = ".typewrite > .wrap { border-right: 0.08em solid #FF7F3E}";
    document.body.appendChild(css);
  };
</script>
